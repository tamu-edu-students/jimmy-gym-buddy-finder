<%# app/views/user_matches/matched_users.html.erb %>

<% content_for :title, "Matched Users" %>

<div class="custom-container my-4">
  <!-- Centered Title -->
  <h1 class="text-center mb-3">Matched Users</h1>

  <!-- Search Bar -->
  <div class="input-group mb-3">
    <span class="input-group-text bg-light border-0"><i class="bi bi-search text-muted"></i></span>
    <input type="text" id="userSearch" class="form-control bg-light text-dark border-0" placeholder="Search" aria-label="Search">
  </div>

  <div id="userList">
    <% if @matched_users.any? %>
      <div class="user-list">
        <% @matched_users.each do |user| %>
          <div class="d-flex justify-content-between align-items-center user-card py-2" data-username="<%= user.username.downcase %>">
            <!-- Corrected link_to for user profile -->
            <%= link_to user_matched_user_profile_path(user_id: current_user.id, id: user.id), class: "user-information", style: "cursor: pointer; text-decoration: none;" do %>
              <div>
                <span class="user-name fw-bold text-dark"><%= user.username %></span>
              </div>
            <% end %>
            <!-- Message button -->
            <button class="btn btn-outline-dark btn-sm message-btn" data-user-id="<%= user.id %>">
              Message
            </button>
          </div>
        <% end %>
      </div>
    <% else %>
      <div class="alert alert-custom text-center mt-3">
        No matched users found.
      </div>
    <% end %>
  </div>
</div>

<script>
document.addEventListener('turbo:load', function() {
  const userSearch = document.getElementById('userSearch');
  const userList = document.getElementById('userList');
  const allUsers = Array.from(userList.querySelectorAll('.user-card')); // Capture all initial user cards
  const noUsersMessage = document.createElement('div');
  noUsersMessage.className = 'alert alert-custom text-center mt-3';
  noUsersMessage.textContent = 'No matched users found.';

  function updateUserList() {
    const searchTerm = userSearch.value.toLowerCase();

    // Clear userList contents to repopulate it with matched users
    userList.innerHTML = '';

    // Filter users based on the search term
    const matchedUsers = allUsers.filter(card => {
      const username = card.getAttribute('data-username');
      return username.includes(searchTerm);
    });

    // If there are matched users, display them; otherwise, show "No matched users found."
    if (matchedUsers.length > 0) {
      matchedUsers.forEach(card => {
        userList.appendChild(card);
      });
    } else {
      userList.appendChild(noUsersMessage);
    }
  }

  // Add event listener to search input
  userSearch.addEventListener('input', updateUserList);
});
</script>


<style scoped>
  /* Custom container to center content and define max-width */
  .custom-container {
    max-width: 500px;
    margin: auto;
    padding: 20px;
    border-radius: 10px;
    background-color: rgba(255, 255, 255, 0.8); /* Slightly whitish opaque background */
  }

  /* Styling for search bar */
  .input-group-text {
    background-color: #f0f0f0; /* Light background for search bar */
    border-radius: 5px;
  }

  .form-control {
    background-color: #f0f0f0; /* Light background for input */
    color: #333;
    border-radius: 5px;
  }

  .form-control::placeholder {
    color: #aaa;
  }

  /* User card styling */
  .user-card {
    border-bottom: 1px solid #ddd; /* Light border between users */
    padding: 10px;
    transition: background-color 0.2s ease;
  }

  .user-card:hover {
    background-color: rgba(240,240,240,0.8); /* Slight hover effect with light opacity */
  }

  .user-name {
    font-size: 1rem;
    color: #333; /* Dark text for usernames */
  }

  .message-btn {
    font-size: 0.875rem;
    padding: 0.25rem 0.75rem;
    border-color: #ccc;
    background-color: #a3bb33;
    border-radius: 8px;
  }
  
  .message-btn:hover {
    background-color: white; /* White hover effect for message button */
    color: #333; /* Dark text on hover */
    border-color: white; /* Match border with background on hover */
  }

  h1 {
    color: #a3bb33;; /* Bright color for visibility */
    text-shadow: 1px 1px 5px rgba(0, 0, 0, 0); /* Optional text shadow */
    font-weight: bold; /* Make the text bold */
  }

  .alert-custom {
    background-color: #a3bb33;
    color: white;
    padding: 15px;
    border-radius: 5px;
    text-align: center;
    margin-top: 20px;
}
</style>